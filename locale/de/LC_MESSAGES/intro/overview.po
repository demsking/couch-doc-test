# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#   http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-18 09:39+0000\n"
"PO-Revision-Date: 2014-03-22 23:13+0000\n"
"Last-Translator: Robert <rok@kowalski.gd>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Pootle 2.5.1-rc1\n"
"X-POOTLE-MTIME: 1395530022.000000\n"

# db92b9d3d0674b51b275f06a5784dcb6
#: ../../../src/intro/overview.rst:18
msgid "Technical Overview"
msgstr "Technischer Überblick"

# fc1f3026eabd4041aa0fb69934e247a0
#: ../../../src/intro/overview.rst:21
msgid "Document Storage"
msgstr "Dokumentenspeicher"

# 0f52c8de890e4d94a2e31a795ec09e71
#: ../../../src/intro/overview.rst:23
msgid "A CouchDB server hosts named databases, which store **documents**. Each document is uniquely named in the database, and CouchDB provides a `RESTful`_ :ref:`HTTP API <api/basics>` for reading and updating (add, edit, delete)  database documents."
msgstr ""
"Ein CouchDB Server stellt Datenbanken mit einem Namen bereit, die "
"**Dokumente** speichern. Jedes Dokument hat einen eindeutigen Namen in der "
"Datenbank und CouchDB stellt ein `RESTful`_ :ref:`HTTP API <api/basics>` für "
"das Lesen und Aktualisieren (hinzufügen, editieren, löschen) von "
"Datenbankdokumenten zur Verfügung."

# c6158409aca44e839dbfff0f51f149a7
#: ../../../src/intro/overview.rst:28
msgid "Documents are the primary unit of data in CouchDB and consist of any number of fields and attachments. Documents also include metadata that’s maintained by the database system. Document fields are uniquely named and contain values of :ref:`varying types <json>` (text, number, boolean, lists, etc), and there is no set limit to text size or element count."
msgstr ""
"Dokumente sind die primäre Dateneinheit in CouchDB und bestehen aus einer "
"Anzahl von Feldern und Attachments. Dokumente beinhalten auch Metadaten, die "
"von der Datenbank verwaltet werden. Die Attribute oder auch Felder des "
"Dokuments haben einen eindeutigen Namen und können die Werte :ref:`varying "
"types <json>` (Text, Zahl, Boolean, Liste, usw.) enthalten. Es gibt keine "
"Grenzen für die Textgröße oder die Anzahl der Elemente."

# e73ef17a19a44885965f5437ab68c5a5
#: ../../../src/intro/overview.rst:34
msgid "The CouchDB document update model is lockless and optimistic. Document edits are made by client applications loading documents, applying changes, and saving them back to the database. If another client editing the same document saves their changes first, the client gets an edit conflict error on save. To resolve the update conflict, the latest document version can be opened, the edits reapplied and the update tried again."
msgstr ""
"Das Modell mit dem CouchDB Dokumente aktualisiert ist optimistisch und "
"lockfrei. Das heißt, dass die Clientapplikation Dokumente läd, Änderungen "
"vornimmt und die Dokumente danach wieder in der Datenbank speichert. Sollte "
"eine andere Clientapplikation das selbe Dokument mit ihren Änderungen zuerst "
"speichern, so wird es einen Konflikt beim Speichern des Dokuments geben. Um "
"den Konflikt aufzulösen, kann die letzte Dokumentversion geöffnet werden, "
"die Änderungen neu angewendet werden und danach noch einmal probiert werden, "
"das Dokument zu speichern."

# 2e6833616a2148138af74c21b77092d2
#: ../../../src/intro/overview.rst:41
msgid "Document updates (add, edit, delete) are all or nothing, either succeeding entirely or failing completely. The database never contains partially saved or edited documents."
msgstr ""
"Die Aktualisierung eines Dokuments (Hinzufügen, Editieren, Löschen) schlägt "
"entweder komplett fehl, oder ist erfolgreich. Die Datenbank wird niemals "
"halb gespeicherte oder editierte Dokumente enthalten."

# 021769436529452595e9c57cb0111d97
#: ../../../src/intro/overview.rst:49
msgid "ACID Properties"
msgstr "ACID Eigenschaften"

# Commitment System?
#: ../../../src/intro/overview.rst:51
msgid "The CouchDB file layout and commitment system features all `Atomic Consistent Isolated Durable` (`ACID`_) properties. On-disk, CouchDB never overwrites committed data or associated structures, ensuring the database file is always in a consistent state. This is a \"crash-only\" design where the CouchDB server does not go through a shut down process, it's simply terminated."
msgstr ""
"Der Aufbau der CouchDB Dateien und das System für Einträge und Änderungen "
"unterstützt alle `Atomic Consistent Isolated Durable` (`ACID`_) "
"Eigenschaften. CouchDB achtet darauf die Datenbank-Dateien auf der "
"Festplatte konsistent zu halten und wird niemals eingetragene Daten und ihre "
"Strukturen einfach überschreiben. Um dies zu erreichen wird sich der CouchDB "
"Server nie herunterfahren, sondern den Prozess einfach beenden - das nennt "
"man auch Crash-Only Design."

# e8b4ae31780f49f2a9e8cb3cf1c329a0
#: ../../../src/intro/overview.rst:57
msgid "Document updates (add, edit, delete) are serialized, except for binary blobs which are written concurrently. Database readers are never locked out and never have to wait on writers or other readers. Any number of clients can be reading documents without being locked out or interrupted by concurrent updates, even on the same document. CouchDB read operations use a `Multi-Version Concurrency Control` (`MVCC`_) model where each client sees a consistent snapshot of the database from the beginning to the end of the read operation."
msgstr ""
"Updates von Dokumenten (Hinzufügen, Editieren, Löschen) werden seriell "
"bearbeitet, außer Binär-Blobs die nebenläufig geschrieben werden. Es kann "
"immer von der Datenbank gelesen werden, es muss nicht auf Schreibprozesse "
"oder andere Leseprozesse gewartet werden. Jede beliebe Anzahl von Clients "
"kann Dokumente lesen ohne sich gegenseitig zu blockieren oder von "
"nebenläufigen Updates unterbrochen zu werden, das funktioniert sogar wenn "
"all dies mit dem selben Dokument passiert. Leseoperationen in CouchDB "
"benutzten das sogenannte `Multi-Version Concurrency Control` (`MVCC`_) "
"Modell, bei dem jeder Client mit einem konsistenten Auszug der Datenbank vom "
"Anfang bis zum Ende der Leseoperation arbeitet."

# f354d3ebca4c45e088ef850d8704e5d3
#: ../../../src/intro/overview.rst:66
msgid "Documents are indexed in `B-trees`_ by their name (DocID) and a Sequence ID. Each update to a database instance generates a new sequential number. Sequence IDs are used later for incrementally finding changes in a database. These B-tree indexes are updated simultaneously when documents are saved or deleted. The index updates always occur at the end of the file (append-only updates)."
msgstr ""
"Die Dokumente werden in `B-trees`_ nach ihrem Namen (DocID) und einer "
"Sequenz ID indexiert. Jedes Update auf einer Instanz der Datebank generiert "
"eine neue sequenzielle Nummer. Sequenz IDs werden später benutzt um "
"inkrementell Änderungen in der Datenbank festzustellen. Die B-tree Indizes "
"werden mit dem Speichern oder Löschen eines Dokuments gleichzeitig "
"mitaktualisiert. Das Update des Index wird an das Ende der Datenbankdatei "
"geschrieben (Append-only updates)."

# a125ad5c71384f6d99112533f6ae491d
#: ../../../src/intro/overview.rst:73
msgid "Documents have the advantage of data being already conveniently packaged for storage rather than split out across numerous tables and rows in most database systems. When documents are committed to disk, the document fields and metadata are packed into buffers, sequentially one document after another (helpful later for efficient building of views)."
msgstr ""
"Der Vorteil von Dokumenten liegt darin, dass Daten bereits bequem für die "
"Aufbewahrung verpackt sind anstatt über eine Vielzahl von Tabellen und "
"Spalten verteilt sind. Wenn ein Dokument auf die Festplatte geschrieben "
"wird, werden die Dokumentenfelder und Metadaten sequenziell in Buffer "
"geschrieben, ein Dokument nach dem Anderen. Dies wird später nützlich für "
"das anlegen von effizienten Views."

# d315b4a6b16e4e578bfb7b79502ceb0b
#: ../../../src/intro/overview.rst:79
msgid "When CouchDB documents are updated, all data and associated indexes are flushed to disk and the transactional commit always leaves the database in a completely consistent state. Commits occur in two steps:"
msgstr ""
"Sobald CouchDB Dokumente aktualisiert werden, werden die gesamten Daten "
"sowie dazugehörigen Indizes sofort auf die Festplatte geschrieben und die "
"Transaktion hinterlässt die Datenbank immer in einem komplett konsistenten "
"Zustand. Transaktionen passiert in zwei Schritten:"

# 4beb12045b62449382da6a07d27edb15
#: ../../../src/intro/overview.rst:83
msgid "All document data and associated index updates are synchronously flushed to disk."
msgstr ""
"Die gesamten Dokumentdaten und dazugehörige Indexupdates werden synchron auf "
"die Fetsplatte geschrieben."

# 9edf8488961c44749a0101b9232c75bd
#: ../../../src/intro/overview.rst:86
msgid "The updated database header is written in two consecutive, identical chunks to make up the first 4k of the file, and then synchronously flushed to disk."
msgstr ""
"Der aktualisierte Datenbank-Header wird in zwei nacheinanderfolgenden, "
"indentischen Teilen erzeugt, die die ersten 4k der Datei ausmachen und "
"danach synchron auf die Festplatte geschrieben"

# b62d7aa266734ce7b8a686e39ab7d0c6
#: ../../../src/intro/overview.rst:89
msgid "In the event of an OS crash or power failure during step 1, the partially flushed updates are simply forgotten on restart. If such a crash happens during step 2 (committing the header), a surviving copy of the previous identical headers will remain, ensuring coherency of all previously committed data. Excepting the header area, consistency checks or fix-ups after a crash or a power failure are never necessary."
msgstr ""
"Falls während Schritt 1 das Betriebssystem abstürzt oder es einen "
"Stromausfall gibt, so sind die halb geschriebenen Aktualisierungen nach dem "
"Neustart verschwunden. Sollte der Ausfall während Schritt 2 (den Header "
"schreiben) passieren, so wird eine Kopie der Header übrig bleiben sodass die "
"geschriebenen Daten in ihrem Kontext erhalten bleiben. Konsistenzprüfungen "
"oder Reparaturen sind nach einem Ausfall nie notwendig, außer für die Header."

# d0d1c41ab0c84a4991f6712cc210e29b
#: ../../../src/intro/overview.rst:102
msgid "Compaction"
msgstr "Kompaktierung"

# 3ad668af904642bd90ad24ce2b07c6bd
#: ../../../src/intro/overview.rst:104
msgid "Wasted space is recovered by occasional compaction. On schedule, or when the database file exceeds a certain amount of wasted space, the compaction process clones all the active data to a new file and then discards the old file. The database remains completely online the entire time and all updates and reads are allowed to complete successfully. The old database file is deleted only when all the data has been copied and all users transitioned to the new file."
msgstr ""
"Verschwendeter Festplattenspeicher kann durch die Kompaktierung der "
"Datenbank wieder hergestellt werden. Wenn die Datenbankdatei eine bestimmte "
"Menge Platz verschwendet, klont der Kompaktierungsprozess die gesamten "
"aktiven Daten in eine neue Datei und entfernt die alte Datei. Dies kann auch "
"nach einem fetsgelegten Zeitplan passieren. Die Datenbank bleibt während des "
"Kompatkierens komplett online und alle Datenupdates sowie Leseprozesse "
"werden erfolgreich abgearbeitet. Die alte Datenbankdatei wird nur gelöscht "
"nachdem alle Daten kopiert und alle Datenbankbenutzer auf die neue Datei "
"umgelenkt wurden."

# 2f5b6abdfc574e21bed787da4ab0bd10
#: ../../../src/intro/overview.rst:113
msgid "Views"
msgstr "Views"

# 6ec802fed16940ffa16334a78a20e6c7
#: ../../../src/intro/overview.rst:115
msgid "ACID properties only deal with storage and updates, but we also need the ability to show our data in interesting and useful ways. Unlike SQL databases where data must be carefully decomposed into tables, data in CouchDB is stored in semi-structured documents. CouchDB documents are flexible and each has its own implicit structure, which alleviates the most difficult problems and pitfalls of bi-directionally replicating table schemas and their contained data."
msgstr ""
"ACID Eigenschaften behandeln Speicherung und Aktualisierung, aber wir "
"benötigen auch die Möglichkeit, unsere Daten interessant und nützlich "
"darzustellen. Im Gegensatz zu SQL-Datenbanken, bei denen Daten zerlegt in "
"Tabellen gespeichert werden, werden Daten bei CouchDB in semi-strukturierten "
"Dokumenten gespeichert. Diese CouchDB Dokumente sind flexibel und jedes hat "
"seine eigene implizierte Struktur. Diese Struktur erleichtert die meisten "
"der schwierigen Probleme und Fallstricke von bidirektional replizierenden "
"Tabellenschemata und ihrer enthaltenen Daten."

# d45669368cc3424c9a522593adee9817
#: ../../../src/intro/overview.rst:122
msgid "But beyond acting as a fancy file server, a simple document model for data storage and sharing is too simple to build real applications on -- it simply doesn't do enough of the things we want and expect. We want to slice and dice and see our data in many different ways. What is needed is a way to filter, organize and report on data that hasn't been decomposed into tables."
msgstr ""
"Aber wenn es komplizierter wird als ein Dateiserver, ist ein simples "
"Dokumentenmodell um Daten zu teilen und zu speichern einfach zu schlicht um "
"damit reale Applikation zu bauen -- es macht dafür zu wenig, was wir wollen "
"und erwarten. Wir möchten unsere Daten auf viele verschiedenen Wege sehen. "
"Wir benötigen Werkzeuge um die Daten, die nicht in Tabellen zerlegt wurden, "
"zu filtern, zu organisieren und zu messen."

# 2d103b393aa54e3db16fb1e669423cbe
#: ../../../src/intro/overview.rst:130
msgid ":ref:`views`"
msgstr ":ref:`views`"

# 683cfdc1c8e842e292cbf8899628e344
#: ../../../src/intro/overview.rst:134
msgid "View Model"
msgstr "View Modell"

# 32b0807c8b484222b8076f00ea478edc
#: ../../../src/intro/overview.rst:136
msgid "To address this problem of adding structure back to unstructured and semi-structured data, CouchDB integrates a view model. Views are the method of aggregating and reporting on the documents in a database, and are built on-demand to aggregate, join and report on database documents. Because views are built dynamically and don’t affect the underlying document, you can have as many different view representations of the same data as you like."
msgstr ""
"Um dem Problem zu begegnen unstrukturierten und semi-strukturierten Daten "
"wieder Struktur zu verleihen, integriert CouchDB ein View Modell. Views sind "
"eine Methode um Dokumente in einer Datenbank zu aggregieren und über diese "
"zu informieren. Sie werden auf Anfrage erstellt um Dokumente zu aggregieren, "
"zusammenzufügen und über diese zu informieren. Da Views dynamisch erstellt "
"werden und die zu Grunde liegenden Dokumente nicht beeinflussen, kannst du "
"so viele unterschiedliche View-Repräsentationen der gleichen Daten haben wie "
"du möchtest."

# 819d3e7b043c49caaa601db8435187a8
#: ../../../src/intro/overview.rst:143
msgid "View definitions are strictly virtual and only display the documents from the current database instance, making them separate from the data they display and compatible with replication. CouchDB views are defined inside special **design documents** and can replicate across database instances like regular documents, so that not only data replicates in CouchDB, but entire application designs replicate too."
msgstr ""
"View Definitionen sind strikt virtuell und zeigen nur die Dokumente der "
"aktuellen Datenbank-Instanz. Dies macht Views unabhängig von den Daten die "
"dieser darstellt und ausserdem kompatibel mit dem Replikations-Mechanismus. "
"CouchDB views werden innnerhalb spezielle **Design Dokumente** definiert und "
"können wie gewöhnliche Dokumente zwischen Datenbank-Instanzen repliziert "
"werden. Somit werden nicht nur Daten repliziert, sondern komplette "
"Applikations-Designs in CouchDB repliziert."

# a6af1b21492f4cbc8031c91959e80bdb
#: ../../../src/intro/overview.rst:152
msgid "Javascript View Functions"
msgstr "JavaScript View-Funktionen"

# 052e8a9d05ad4627af5e9df626009c1c
#: ../../../src/intro/overview.rst:154
msgid "Views are defined using Javascript functions acting as the map part in a `map-reduce system`_. A :ref:`view function <viewfun>` takes a CouchDB document as an argument and then does whatever computation it needs to do to determine the data that is to be made available through the view, if any. It can add multiple rows to the view based on a single document, or it can add no rows at all."
msgstr ""
"Views werden mit Hilfe von JavaScript Funktionen definiert, die den Map-Part "
"in einem `Map-Reduce System` darstellen. Eine :ref:`view function <viewfun>` "
"nimmt ein CouchDB Dokument als Argument entgegen und berechnet die Daten, "
"die durch den View zugänglich gemacht werden sollen, sofern vorhanden. Sie "
"kann dem View mehrere oder garkeine Zeilen auf Grundlage eines Dokumentes "
"hinzufügen."

# 19b39f73e71d4736b1986c2dc25dab6e
#: ../../../src/intro/overview.rst:165
msgid ":ref:`viewfun`"
msgstr ":ref:`viewfun`"

# 65ada595dc344e539d89e05b7c00f3e7
#: ../../../src/intro/overview.rst:169
msgid "View Indexes"
msgstr "View Indizes"

# 63a845a3ce4a46e29488ab894e57e0eb
#: ../../../src/intro/overview.rst:171
msgid "Views are a dynamic representation of the actual document contents of a database, and CouchDB makes it easy to create useful views of data. But generating a view of a database with hundreds of thousands or millions of documents is time and resource consuming, it's not something the system should do from scratch each time."
msgstr ""
"Views sind die dynamische Repräsentation der aktuellen Dokumentinhalte einer "
"Datenbank. CouchDB macht es einem leicht nützliche Views der Daten zu "
"erstellen. Allerdings wird beträchtliche Zeit und Ressourcen in Anspruch "
"genommen wenn ein View auf Grundlage hunderter, tausender oder Millionen von "
"Dokumenten generiert werden soll. Das sollte das System nicht jedes mal von "
"Neuem tun."

# 5e94e4370dc7448099ff90cc4fd8d83a
#: ../../../src/intro/overview.rst:177
msgid "To keep view querying fast, the view engine maintains indexes of its views, and incrementally updates them to reflect changes in the database. CouchDB’s core design is largely optimized around the need for efficient, incremental creation of views and their indexes."
msgstr ""
"Um das Abfragen von Views schnell zu ermöglichen, verwaltet die View-Engine "
"Indizes der Views und aktualisiert diese inkrementell um die "
"Aktualisierungen in der Datenbank widerzuspiegeln. Das Grundlegende Design "
"von CouchDB ist auf den Bedarf der Erstellung effizienter und inkrementeller "
"Views und deren Indizes ausgerichtet."

# 4d098619618f4199a92f1f00d1043a72
#: ../../../src/intro/overview.rst:182
msgid "Views and their functions are defined inside special \"design\" documents, and a design document may contain any number of uniquely named view functions. When a user opens a view and its index is automatically updated, all the views in the same design document are indexed as a single group."
msgstr ""
"Views und Ihre Funktionen werden innerhalb spezieller \"design\" Dokumente "
"definiert und dabei kann ein Design-Dokument eine beliebige Anzahl eindeutig "
"benannter View-Funktionen beinhalten. Wenn Benutzer einen View öffnet und "
"dessen Index wird automatisch aktualisiert werden alle VIews im gleichen "
"Design Dokument als einzelnen Gruppen indiziert.  "

# 5dd5ce4e88e04ac5b3e5418659152165
#: ../../../src/intro/overview.rst:187
msgid "The view builder uses the database sequence ID to determine if the view group is fully up-to-date with the database. If not, the view engine examines the all database documents (in packed sequential order) changed since the last refresh. Documents are read in the order they occur in the disk file, reducing the frequency and cost of disk head seeks."
msgstr ""
"Der View-Builder nutzt die Sequenz-ID der Datenbank um festzustellen, ob die "
"View-Gruppe komplett aktuell im Vergleich zur Datenbank ist. Wenn nicht "
"untersucht die View-Engine alle Datenbank Dokumente (in gepackter "
"sequentieller Reihenfolge) die seit der letzten Aktualisierung geändert "
"wurden. Dokumente werden in der Reihenfolge wie sie in der Datei auf der "
"Festplatte auftreten gelesen um die Frequenz und Lesekopfvorgänge zu "
"reduzieren."

# 4ce2712ecdcf4297883b1e9f7936a5cb
#: ../../../src/intro/overview.rst:193
msgid "The views can be read and queried simultaneously while also being refreshed. If a client is slowly streaming out the contents of a large view, the same view can be concurrently opened and refreshed for another client without blocking the first client. This is true for any number of simultaneous client readers, who can read and query the view while the index is concurrently being refreshed for other clients without causing problems for the readers."
msgstr ""
"Während die Views aktualisiert werden, können sie gleichzeitig gelesen und "
"auch Abfragen auf sie gemacht werden. Wenn ein Client langsam den Inhalt "
"einer großen View empfängt, kann der selbe View von anderen Clients geöffnet "
"aktualisiert werden, ohne dass der erste Client geblockt wird. Dies gilt für "
"jede beliebige Anzahl von gleichzeitigen Lesezugriffen, die alle den View "
"lesen und abfragen können, ohne zu einem Problem für andere lesende Clients "
"zu werden."

# 647f4ee107f147c8bfcd0dee685c1b77
#: ../../../src/intro/overview.rst:201
msgid "As documents are examined, their previous row values are removed from the view indexes, if they exist. If the document is selected by a view function, the function results are inserted into the view as a new row."
msgstr ""
"Wenn Dokumente durch die 'map' und 'reduce' Funktionen verarbeitet werden, "
"werden ihre vorherigen Werte von den Viewindizes entfernt, sofern vorhanden. "
"Wenn ein Dokument von einer Viewfunktion selektiert wird, werden die "
"Resultate der Funktion in den View als neue Spalte eingefügt."

# 42915fec38334338afe24b42a8e80130
#: ../../../src/intro/overview.rst:205
msgid "When view index changes are written to disk, the updates are always appended at the end of the file, serving to both reduce disk head seek times during disk commits and to ensure crashes and power failures can not cause corruption of indexes. If a crash occurs while updating a view index, the incomplete index updates are simply lost and rebuilt incrementally from its previously committed state."
msgstr ""
"Wenn Änderungen am Viewindex auf die Festplatte geschrieben werden, werden "
"die Updates immer an das Ende der Datei angehängt, um die Suchzeit für neue "
"Daten auf der Festplatte zu verringern und um Sicherzustellen, dass ein "
"Serverabsturz oder Stromausfall den Index nicht beschädigt. Falls es zu "
"einem Absturz kommt während ein View aktualisiert wird, sind die nicht "
"fertig geschriebenen Updates einfach verloren und der vorherige Zustand kann "
"inkrementell von den vorher erfolgreich geschriebenen Daten am Ende der "
"Datei wiederhergestellt werden."

# e0562f7360494536aedbe28bbbdf7f50
#: ../../../src/intro/overview.rst:214
msgid "Security and Validation"
msgstr "Sicherheit und Validierung"

# Modell?
#: ../../../src/intro/overview.rst:216
msgid "To protect who can read and update documents, CouchDB has a simple reader access and update validation model that can be extended to implement custom security models."
msgstr ""
"Um zu definieren wer Dokumente lesen und aktualisieren darf, bietet CouchDB "
"ein simples Modell für die Validierung von Zugriffen und Aktualisierungen "
"an. Dieses Modell kann um weitere eigene Sicherheitsmodelle erweitert werden."

# 4c898ea18ab8424a9796c648284a9a90
#: ../../../src/intro/overview.rst:222
msgid ":ref:`api/db/security`"
msgstr ":ref:`api/db/security`"

# 7d3fc384ef6f463495d9da4731cd4bea
#: ../../../src/intro/overview.rst:226
msgid "Administrator Access"
msgstr "Adminstrationszugriff"

# other special formulas?
#: ../../../src/intro/overview.rst:228
msgid "CouchDB database instances have administrator accounts. Administrator accounts can create other administrator accounts and update design documents. Design documents are special documents containing view definitions and other special formulas, as well as regular fields and blobs."
msgstr ""
"Jede CouchDB Instanz hat Administratoraccounts. Ein Administrator kann "
"andere Administratoraccounts anlegen und Designdokumente aktualisieren. Ein "
"Designdokument ist ein spezielles Dokument, das zur Definition von Views "
"genutzt wird, aber auch normale Felder und Blobs enthält."

# 5403d27008c9456a99b8cc8aee48d175
#: ../../../src/intro/overview.rst:235
msgid "Update Validation"
msgstr "Validierung von Aktualisierungen"

# 8800947243674db986ec621a18fb4ad0
#: ../../../src/intro/overview.rst:237
msgid "As documents written to disk, they can be validated dynamically by javascript functions for both security and data validation. When the document passes all the formula validation criteria, the update is allowed to continue. If the validation fails, the update is aborted and the user client gets an error response."
msgstr ""
"Man kann Dokumente, während sie geschrieben werden dynamisch mit JavaScript "
"validieren - zur Validierung der Daten und zur Sicherheit. Wenn das Dokument "
"alle Validierungskriterien erfüllt, wird das Update weiter ausgeführt. "
"Sollte die Validierung jedoch fehlschlagen, wird das Update abgebrochen und "
"eine Fehlermeldung an den Client gesendet."

# 839a02eb447e447e942cf56f4069b3cd
#: ../../../src/intro/overview.rst:243
msgid "Both the user's credentials and the updated document are given as inputs to the validation formula, and can be used to implement custom security models by validating a user's permissions to update a document."
msgstr ""
"Die Anmeldedaten des Benutzers und das aktualisierte Dokument werden beide "
"als Eingabe an die Validierungsfunktion gegeben. Auf diese Weise können "
"eigene Sicherheitsmodelle für die Aktualisierung eines Dokuments "
"implementiert werden."

# 0764ac83f2f34a9d94c66931f8ac4496
#: ../../../src/intro/overview.rst:247
msgid "A basic \"author only\" update document model is trivial to implement, where document updates are validated to check if the user is listed in an \"author\" field in the existing document. More dynamic models are also possible, like checking a separate user account profile for permission settings."
msgstr ""
"Ein simples \"nur der Autor\"-Aktualisierungsmodell ist trivial zu "
"implementieren: es wird einfach geprüft, ob der Benutzer in dem \"Author\"-"
"Feld des existierenden Dokuments aufgeführt ist. Aber es sind auch "
"dynamischere Modelle möglich, z.B. die Prüfung von separaten "
"Benutzerprofilen um den Zugriff zu erlauben."

# a3beaf0a9d43441283bd08cbbcf2638c
#: ../../../src/intro/overview.rst:252
msgid "The update validations are enforced for both live usage and replicated updates, ensuring security and data validation in a shared, distributed system."
msgstr ""
"Die Aktualisierungsvalidierungen werden für die \"live\"-Benutzung, als auch "
"für replizierte Aktualisierungen erzwungen und sorgen so für Sicherheit und "
"Datenvalidierung in einem verteiltem System."

# 20083c488d264edb83fb75076e0eddb5
#: ../../../src/intro/overview.rst:257
msgid ":ref:`vdufun`"
msgstr ":ref:`vdufun`"

# 72532b5de1684c37a7052ae72e8353b0
#: ../../../src/intro/overview.rst:261
msgid "Distributed Updates and Replication"
msgstr "Replikation und verteilte Aktualisierungen"

# 0bce5b15331544a2890d2ff30c7a367f
#: ../../../src/intro/overview.rst:263
msgid "CouchDB is a peer-based distributed database system, it allows for users and servers to access and update the same shared data while disconnected and then bi-directionally replicate those changes later."
msgstr ""
"CouchDB ist ein gleichwertig verteiltes Datenbank-System. Es erlaubt "
"Benutzern und Servern die nicht verbunden sind die gleichen geteilten Daten "
"zu bearbeiten und die vorgenommenen Änderungen dann später bidirektional zu "
"replizieren."

# 4fa965c58c0b471bb3cf3380a0ff1293
#: ../../../src/intro/overview.rst:267
msgid "The CouchDB document storage, view and security models are designed to work together to make true bi-directional replication efficient and reliable. Both documents and designs can replicate, allowing full database applications (including application design, logic and data) to be replicated to laptops for offline use, or replicated to servers in remote offices where slow or unreliable connections make sharing data difficult."
msgstr ""
"Der Aufbau des Dokumentenspeichers, den Views und der Sicherheit von CouchDB "
"wurde darauf ausgelegt, um echte bidirektionale Replikation effizient und "
"verlässlich zu gestalten. Dokumente und Designs können repliziert werden und "
"erlaubt es komplette Applikationen in der Datenbank (bestehend aus "
"Applikationsdarstellung, Logik und Daten) zu speichern und zu replizieren. "
"Zum Beispiel können sie auf einen Laptop für die Offlinenutzung repliziert "
"werden, oder auf entfernte Server auf der anderen Seite der Erde. Denn "
"gerade bei weiten Entfernungen können langsame oder unbeständige "
"Netzwerkverbindungen es einem schwer machen, Daten zu teilen."

# 340aa95240d246a2bf923aa5e120eb96
#: ../../../src/intro/overview.rst:274
msgid "The replication process is incremental. At the database level, replication only examines documents updated since the last replication. Then for each updated document, only fields and blobs that have changed are replicated across the network. If replication fails at any step, due to network problems or crash for example, the next replication restarts at the same document where it left off."
msgstr ""
"Der Replikations-Prozess ist inkrementell.  Auf der Datenbank-Ebene werden "
"vom Replikator nur Dokumente betrachtet, die seit der letzten Replikation "
"aktualisiert wurden. Im weiteren werden aus jedem aktualisiertem Dokument "
"nur Felder und Blobs die sich geändert haben über das Netzwerk repliziert. "
"Wenn die Replikation z.B. wegen Netzwerk-Problemen oder einem Crash "
"fehlschlägt, beginnt die nächste Repliaktion wieder genau beim letzten "
"Dokument."

# a3d07457fd2942be9c860b84da12f762
#: ../../../src/intro/overview.rst:281
msgid "Partial replicas can be created and maintained. Replication can be filtered by a javascript function, so that only particular documents or those meeting specific criteria are replicated. This can allow users to take subsets of a large shared database application offline for their own use, while maintaining normal interaction with the application and that subset of data."
msgstr ""
"Es können partielle Repliken erstellt und verwaltet werden. Die Replikation "
"kann mit einer javaScript Funktion gefiltert werden, so dass nur solche "
"Dokumente repliziert werden, die spezielle Kriterien erfüllen. Dies "
"ermöglicht Benutzern nur eine Teilmenge der verteilten Datenbank für den "
"offline Gebrauch zu nutzen. "

# dca69f93c2db48d5a5c3df8f3d1f4706
#: ../../../src/intro/overview.rst:289
msgid "Conflicts"
msgstr "Konflikte"

# 20646443adca4ee891af2e3ea89aa63b
#: ../../../src/intro/overview.rst:291
msgid "Conflict detection and management are key issues for any distributed edit system. The CouchDB storage system treats edit conflicts as a common state, not an exceptional one. The conflict handling model is simple and \"non-destructive\" while preserving single document semantics and allowing for decentralized conflict resolution."
msgstr ""
"Konflikte festzustellen und zu behandeln sind Kernprobleme in jedem "
"verteilten System. CouchDB behandelt Konflikte als einen normalen Zustand, "
"nicht als Ausnahme. Das Prinzip, Konflikte zu behandeln ist einfach gehalten "
"und \"nicht-destruktiv\", es erhält die einzelnen Dokumente und erlaubt "
"dezentralisierte Konfliktbehandlung."

# 01373668ab53416fb1d270f7738b77f9
#: ../../../src/intro/overview.rst:297
msgid "CouchDB allows for any number of conflicting documents to exist simultaneously in the database, with each database instance deterministically deciding which document is the \"winner\" and which are conflicts. Only the winning document can appear in views, while \"losing\" conflicts are still accessible and remain in the database until deleted or purged during database compaction. Because conflict documents are still regular documents, they replicate just like regular documents and are subject to the same security and validation rules."
msgstr ""
"In der CouchDB können beliebig viele Dokumente, die einen Konflikt haben in "
"der Datenbank existieren, bei dem jedem jede Datenbankinstanz "
"deterministisch entscheidet, welches Dokument der \"Gewinner\" ist und "
"welche Dokumente Konflikte haben. Nur das gewinnende Dokument kann in Views "
"auftauchen, während die verlierenden Konfliktdokumente bis sie manuell "
"gelöscht werden, oder von der Kompaktierung gelöscht werden, immer noch in "
"der Datenbank verfügbar und abrufbar sind. Da konfliktierende Dokumente "
"weiterhin reguläre Dokumente sind, können sie wie andere Dokumente "
"repliziert werden. Außerdem gelten für sie die selben Bedingungen für "
"Sicherheit und Validierung wie für alle anderen Dokumente."

# Semantik der Dokumentdatenbank erhält?
#: ../../../src/intro/overview.rst:306
msgid "When distributed edit conflicts occur, every database replica sees the same winning revision and each has the opportunity to resolve the conflict. Resolving conflicts can be done manually or, depending on the nature of the data and the conflict, by automated agents. The system makes decentralized conflict resolution possible while maintaining single document database semantics."
msgstr ""
"Wenn ein Konflikt beim Editieren von verteilten Daten auftritt, sieht jede "
"der Datenbanken die selbe Revision gewinnen und hat die Möglichkeit, den "
"Konflikt aufzuheben. Konflikte können manuell oder automatisiert aufgelöst "
"werden, je nach Art der Daten und des Konflikt. Das System ermöglicht "
"dezentralisierte Konfliktauflösung während es die Semantik der "
"Dokumentdatenbank erhält."

# dc1541c8aaec4f80ad50e260b4aae04d
#: ../../../src/intro/overview.rst:313
msgid "Conflict management continues to work even if multiple disconnected users or agents attempt to resolve the same conflicts. If resolved conflicts result in more conflicts, the system accommodates them in the same manner, determining the same winner on each machine and maintaining single document semantics."
msgstr ""
"Das Konfliktmanagement funktioniert auch weiter, wenn mehrere nicht "
"verbundene Benutzer oder Dienste versuchen den selben Konflikt zu beheben. "
"Falls ein aufgelöster Konflikt weitere Konflikte auslöst, werden die "
"Konflikte vom System überall auf die gleiche Weise aufgelöst. Somit gewinnen "
"auf jedem Rechner die selben Dokumente den Konflikt und die einzelne "
"Dokumentsemantik bleibt erhalten."

# d7b973c73f7644f09df7a7a84b49350a
#: ../../../src/intro/overview.rst:320
msgid ":ref:`replication/conflicts`"
msgstr ":ref:`replication/conflicts`"

# f17830bdaa3c4430bb4b86dee62db7fb
#: ../../../src/intro/overview.rst:324
msgid "Applications"
msgstr "Applikationen"

# a2c78d2d5ab342f8a8dbe332954bc3ee
#: ../../../src/intro/overview.rst:326
msgid "Using just the basic replication model, many traditionally single server database applications can be made distributed with almost no extra work. CouchDB replication is designed to be immediately useful for basic database applications, while also being extendable for more elaborate and full-featured uses."
msgstr ""
"Mit Hilfe des einfachen Replikationsmodells können viele traditionelle "
"Applikationen, die nur eine einzelne Datenbank nutzen, mit wenig Mehraufwand "
"zu verteilten Systemen umgerüstet werden. Die Replikation von CouchDB wurde "
"mit dem Zweck entwickelt, schnell einen Nutzen für einfache "
"Datenbankapplikationen zu bringen, ist aber gleichzeitig so entwickelt "
"worden, dass sie für aufwendigere Anwendungen erweitert werden kann."

# 2e1c050016e24a18accb257c2b58ee0f
#: ../../../src/intro/overview.rst:332
msgid "With very little database work, it is possible to build a distributed document management application with granular security and full revision histories. Updates to documents can be implemented to exploit incremental field and blob replication, where replicated updates are nearly as efficient and incremental as the actual edit differences (\"diffs\")."
msgstr ""
"Man kann mit sehr wenig Aufwand ein verteiltes Dokumentenverwaltungssystem "
"mit granularer Sicherheit und voller Revisionshistorie erstellen. Die "
"Aktualisierungen an Dokumenten können so implementiert werden, dass Updates "
"mit Hilfe von inkrementeller Feld- und Blob Replikation fast so effizient "
"und inkrementell wie die eigentlichen Änderungen sind, die an den Dokumenten "
"vollzogen werden (sogenannte \"diffs\")."

# a91fea22742146e2a84339a67490b0ba
#: ../../../src/intro/overview.rst:338
msgid "The CouchDB replication model can be modified for other distributed update models. If the storage engine is enhanced to allow multi-document update transactions, it is possible to perform Subversion-like \"all or nothing\" atomic commits when replicating with an upstream server, such that any single document conflict or validation failure will cause the entire update to fail. Like Subversion, conflicts would be resolved by doing a \"pull\" replication to force the conflicts locally, then merging and  re-replicating to the upstream server."
msgstr ""
"Man kann das Replikationsmodell von CouchDB modifizieren, sodass andere "
"Modelle für das verteilte Aktualisieren von Dokumenten genutzt werden. Wenn "
"die Speicherung um Transaktionen für mehrere Dokumente erweitert wird, ist "
"es möglich \"alles-oder-nichts\"-Commits wie bei Subversion zu nutzen, bei "
"denen ein einzelner Dokumentkonflikt oder Validierungsfehler die "
"Aktualisierung fehlschlagen lässt. Wie bei Subversion würden Konflikte durch "
"eine \"pull\"-Replikation gelöst werden, um den Konflikt lokal "
"hervorzurufen, dann aufzulösen und die Änderungen danach an den Upstream-"
"Server zu senden."

# 078969a3fbed493e91d5b7bcc2f92f53
#: ../../../src/intro/overview.rst:349
msgid "Implementation"
msgstr "Implementierung"

# d314a8777a10401c8bf01d1c01343d6e
#: ../../../src/intro/overview.rst:351
msgid "CouchDB is built on the `Erlang OTP platform`_, a functional, concurrent programming language and development platform. Erlang was developed for real-time telecom applications with an extreme emphasis on reliability and availability."
msgstr ""
"Die Grundlage für die Entwicklung von CouchDB bildet die `Erlang OTP "
"platform`_, eine funktionale, nebenläufige Programmiersprache und "
"Entwicklungsumgebung. Erlang wurde für Echtzeit-"
"Telekommunikationsanwendungen mit dem Fokus auf Verfügbarkeit und "
"Zuverlässigkeit entwickelt."

# 2262a536b7134415b4d2bd2e0dddc75c
#: ../../../src/intro/overview.rst:356
msgid "Both in syntax and semantics, Erlang is very different from conventional programming languages like C or Java. Erlang uses lightweight \"processes\" and message passing for concurrency, it has no shared state threading and all data is immutable. The robust, concurrent nature of Erlang is ideal for a database server."
msgstr ""
"In seiner Semantik und auch der Syntax unterscheidet sich Erlang grundlegend "
"von konventionellen Programmiersprachen wie C oder auch Java. Erlang benutzt "
"leichtgewichtige \"Prozesse\" und das Senden von Nachrichten für "
"Nebenläufigkeit, statt geteiltem Threading. Alle Daten sind zudem "
"unveränderbar. Durch den Fokus auf Robustheit und Nebenläufigkeit eignet "
"sich Erlang ausgezeichnet um Datenbankserver zu schreiben."

# bcc1ba1f44164e7f8b76342a1e3f6bfb
#: ../../../src/intro/overview.rst:362
msgid "CouchDB is designed for lock-free concurrency, in the conceptual model and the actual Erlang implementation. Reducing bottlenecks and avoiding locks keeps the entire system working predictably under heavy loads. CouchDB can accommodate many clients replicating changes, opening and updating documents, and querying views whose indexes are simultaneously being refreshed for other clients, without needing locks."
msgstr ""
"Das Konzept von CouchDB und die Implementierung in Erlang wurde für "
"Nebenläufigkeit, die nicht blockiert, entwickelt. Durch die Vermeidung von "
"Flaschenhälsen und durch das Vermeiden von Blockierungen arbeitet das System "
"auch unter hoher Last vorhersehbar. Ohne Datenbank-Locks zu nutzen kann "
"CouchDB an viele Clients Änderungen replizieren, Dokumente öffnen und "
"aktualisieren, und Views abrufen, deren Indizes gleichzeitig für andere "
"Clients erneuert werden."

# f64bdb9c064c4ab88bf597ca417087ff
#: ../../../src/intro/overview.rst:369
msgid "For higher availability and more concurrent users, CouchDB is designed for \"shared nothing\" clustering. In a \"shared nothing\" cluster, each machine is independent and replicates data with its cluster mates, allowing individual server failures with zero downtime. And because consistency scans and fix-ups aren’t needed on restart, if the entire cluster fails -- due to a power outage in a datacenter, for example -- the entire CouchDB distributed system becomes immediately available after a restart."
msgstr ""
"Um höhere Erreichbarkeit zu erreichen und mehr gleichzeitige Nutzer zu "
"erlauben wurde CouchDB für das \"shared nothing\"-Clustering entwickelt. In "
"einem \"shared nothing\"-Cluster ist jede Maschine unabhängig und repliziert "
"Daten mit seinen Cluster-Kollegen, dadurch können einzelne Server in dem "
"Cluster ausfallen, ohne einen Ausfall der Applikation hervorzurufen. Dadurch "
"dass keine Konsitenzüberprüfungen und Reparaturen für die Daten beim "
"Neustart durchgeführt werden müssen, wenn der gesamte Cluster ausfällt -- "
"z.B. durch einen Stromausfall im Rechenzentrum -- ist das gesamte verteilte "
"CouchDB System sofort nach einem Neustart erreichbar."

# b34a5ae2948d4201a0479547d6b2b94b
#: ../../../src/intro/overview.rst:378
msgid "CouchDB is built from the start with a consistent vision of a distributed document database system. Unlike cumbersome attempts to bolt distributed features on top of the same legacy models and databases, it is the result of careful ground-up design, engineering and integration. The document, view, security and replication models, the special purpose query language, the efficient and robust disk layout and the concurrent and reliable nature of the Erlang platform are all carefully integrated for a reliable and efficient system."
msgstr ""
"CouchDB wurde von Anfang an mit der Vision von einem verteilten "
"Datenbanksystem entwickelt. Im Gegensatz zu den umständlichen Versuchen, die "
"Features für das verteilte System \"on-top\" auf die bestehende Datenbank zu "
"setzen, ist CouchDB das Ergebnis von einem von Anfang an durchdachten "
"Konzept, Entwicklung und Integration für eine verteilte Datenbank. Das "
"Dokument-, View-, Sicherheits- und Replikationsmodell, die spezielle "
"Abfragesprache, das effiziente und robuste Speicherprinzip und die "
"nebenläufige und verlässliche Art der Erlang Plattform ergeben in der "
"Kombination ein verlässliches und effizientes System."
